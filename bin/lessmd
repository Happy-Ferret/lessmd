#!/usr/bin/env node

var fs = require('fs');
var os = require('os');
var path = require('path');

var userFile = path.resolve(os.homedir(), '.lessmd.js');

if (fs.existsSync(userFile)) {
  global.UserSettings = require(userFile);
}

var Renderer = require('../lib/renderer');
var headerPlugin = require('../lib/plugin/header');
var footerPlugin = require('../lib/plugin/footer');
var textPlugin = require('../lib/plugin/text');
var markPlugin = require('../lib/plugin/markdown');

var filename = '-';
var data = '';

var lessmd = (function(isPipe) {
  var isMarkdown = markPlugin.isMarkdown(data);

  data = textPlugin(data);

  if (isMarkdown) {
    data = markPlugin.Markdown(data);
  }

  if (isPipe || !process.stdout.isTTY) {
    process.stdout.write(data);
    process.exit(0);
  }

  var render = new Renderer();

  if (filename !== '-') {
    render.header = function() {
      return headerPlugin.call(render,  path.basename(filename));
    };

    render.footer = function() {
      return footerPlugin.call(render, path.basename(filename));
    };
  }

  if (isMarkdown) {
    data = markPlugin.toBuffer(data);
  }

  render.display(data);
}).bind(this);


if (process.argv.length > 2 && fs.existsSync(process.argv[2])) {
  filename = process.argv[2];
  data = fs.readFileSync(filename).toString('utf8');
  lessmd();
} else {
  process.stdin.on('data', function(str) {
    data += str;
  });

  process.stdin.on('end', function() {
    lessmd(true);
  });
}

process.stdin.resume();
process.stdin.setEncoding('utf8');

